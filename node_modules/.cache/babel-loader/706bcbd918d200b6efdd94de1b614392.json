{"ast":null,"code":"var _jsxFileName = \"/Users/lucianocolabraro/Desktop/ironhack/Expense-Tracker-udemy/src/components/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  //i called the pointer in expenseform, create a function that will be used to pass values to expensefor,\n  const [isEditing, setIsEditing] = useState(false);\n\n  const submitNewExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    console.log(expenseData);\n    props.onAddExpense(expenseData); // props that will pass data to app.js , to pass data up to parent\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add Neew Expense \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSubmitNewExpenseData: submitNewExpenseDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/lucianocolabraro/Desktop/ironhack/Expense-Tracker-udemy/src/components/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","submitNewExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","console","log","onAddExpense","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,2BAA2B,GAAIC,kBAAD,IAAwB;AAC1D,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAL,IAAAA,KAAK,CAACY,YAAN,CAAmBP,WAAnB,EAP0D,CAOzB;AAClC,GARD;;AAUA,QAAMQ,mBAAmB,GAAG,MAAM;AAChCX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMY,kBAAkB,GAAG,MAAM;AAC/BZ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACG,CAACD,SAAD,iBACC;AAAQ,MAAA,OAAO,EAAEY,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGZ,SAAS,iBACR,QAAC,WAAD;AACE,MAAA,sBAAsB,EAAEE,2BAD1B;AAEE,MAAA,QAAQ,EAAEW;AAFZ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlCD;;GAAMf,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  //i called the pointer in expenseform, create a function that will be used to pass values to expensefor,\n  const [isEditing, setIsEditing] = useState(false);\n\n  const submitNewExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n\n    console.log(expenseData);\n    props.onAddExpense(expenseData); // props that will pass data to app.js , to pass data up to parent\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add Neew Expense </button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSubmitNewExpenseData={submitNewExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n"]},"metadata":{},"sourceType":"module"}